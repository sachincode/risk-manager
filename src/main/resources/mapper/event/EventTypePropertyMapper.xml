<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sachin.risk.manager.dao.event.EventTypePropertyMapper">

    <resultMap id="eventTypeProperty" type="com.sachin.risk.common.core.model.EventTypeProperty">
        <result property="id" column="id"/>
        <result property="eventTypeId" column="event_type_id"/>
        <result property="eventPropId" column="event_prop_id"/>
        <result property="encryptType" column="encrypt_type"/>
        <result property="sortNumber" column="sort_number"/>
        <result property="dictTableName" column="dict_table_name"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="eventTypePropertyExt" type="com.sachin.risk.manager.model.event.EventTypePropertyExt">
        <result property="id" column="id"/>
        <result property="eventTypeId" column="event_type_id"/>
        <result property="eventPropId" column="event_prop_id"/>
        <result property="encryptType" column="encrypt_type"/>
        <result property="sortNumber" column="sort_number"/>
        <result property="dictTableName" column="dict_table_name"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="propKey" column="prop_key"/>
        <result property="propName" column="prop_name"/>
    </resultMap>

    <sql id="selectSql">
	    select 
	    	id,
	    	event_type_id,
	    	event_prop_id,
	    	encrypt_type,
	    	sort_number,
	    	dict_table_name,
	    	status,
	    	create_by,
	    	update_by,
	    	create_time,
	    	update_time
	    from
	        rc_event_type_property
	</sql>


    <sql id="joinSelectSql">
        select
	    	a.id,
	    	a.event_type_id,
	    	a.event_prop_id,
	    	a.encrypt_type,
	    	a.sort_number,
	    	a.dict_table_name,
	    	a.status,
	    	a.create_by,
	    	a.update_by,
	    	a.create_time,
	    	a.update_time,
	    	b.code,
	    	b.name,
	    	c.prop_key,
	    	c.prop_name
	    from
	        rc_event_type_property as a
        JOIN rc_event_type as b
        JOIN rc_event_property as c
        on a.event_type_id = b.id and a.event_prop_id = c.id
    </sql>

    <sql id="whereSql">
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="eventTypeId != null">
                and event_type_id = #{eventTypeId}
            </if>
            <if test="eventPropId != null">
                and event_prop_id = #{eventPropId}
            </if>
            <if test="dictTableName != null and dictTableName != ''">
                and dict_table_name = #{dictTableName}
            </if>
            <if test="encryptType != null">
                and encrypt_type = #{encryptType}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </sql>

    <!-- 根据条件查询所有 -->
    <select id="queryByCondition" resultMap="eventTypeProperty">
        <include refid="selectSql"/>
        <include refid="whereSql"/>
    </select>

    <!-- 统计条数 -->
    <select id="count" resultType="long">
        select count(*)
        from rc_event_type_property
        <include refid="whereSql"/>
    </select>

    <!-- 分页查询 -->
    <select id="queryWithPage" resultMap="eventTypePropertyExt">
        <include refid="joinSelectSql"/>
        <include refid="whereSql"/>
        order by id
        limit #{start},#{pageSize}
    </select>


    <!-- 新增 -->
    <insert id="add" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.sachin.risk.common.core.model.EventTypeProperty">
        insert into rc_event_type_property(event_type_id,event_prop_id,encrypt_type,sort_number,status,dict_table_name,create_by,update_by,create_time,update_time)
        values(#{eventTypeId},#{eventPropId},#{encryptType},#{sortNumber},#{status},#{dictTableName},#{createBy},#{updateBy},#{createTime},#{updateTime})
    </insert>

    <!-- 删除 -->
    <delete id="delete">
        delete from rc_event_type_property where id = #{id}
    </delete>

    <!-- 更新 -->
    <update id="update" parameterType="com.sachin.risk.common.core.model.EventTypeProperty">
        update rc_event_type_property
        set
        update_by=#{updateBy}
        <if test="eventTypeId">,event_type_id = #{eventTypeId}</if>
        <if test="eventPropId">,event_prop_id = #{eventPropId}</if>
        <if test="encryptType">,encrypt_type = #{encryptType}</if>
        <if test="sortNumber">,sort_number = #{sortNumber}</if>
        <if test="status">,status = #{status}</if>
        <if test="dictTableName">,dict_table_name = #{dictTableName}</if>
        where id = #{id}
    </update>

</mapper>
